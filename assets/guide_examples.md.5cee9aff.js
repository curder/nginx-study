import{_ as s,c as a,o as n,a as l}from"./app.24355d18.js";const A=JSON.parse('{"title":"一些示例","description":"","frontmatter":{},"headers":[{"level":2,"title":"添加或删除 www 子域名","slug":"添加或删除-www-子域名","link":"#添加或删除-www-子域名","children":[]},{"level":2,"title":"强制所有请求使用 SSL/TLS","slug":"强制所有请求使用-ssl-tls","link":"#强制所有请求使用-ssl-tls","children":[]},{"level":2,"title":"禁止对不支持的文件扩展名的请求","slug":"禁止对不支持的文件扩展名的请求","link":"#禁止对不支持的文件扩展名的请求","children":[]},{"level":2,"title":"禁止访问站点某些前缀","slug":"禁止访问站点某些前缀","link":"#禁止访问站点某些前缀","children":[]},{"level":2,"title":"配置自定义重新路由","slug":"配置自定义重新路由","link":"#配置自定义重新路由","children":[]},{"level":2,"title":"修复失败图片路径","slug":"修复失败图片路径","link":"#修复失败图片路径","children":[]},{"level":2,"title":"图片缺失时使用默认图片","slug":"图片缺失时使用默认图片","link":"#图片缺失时使用默认图片","children":[]}],"relativePath":"guide/examples.md","lastUpdated":1679310820000}'),e={name:"guide/examples.md"},p=l(`<h1 id="一些示例" tabindex="-1">一些示例 <a class="header-anchor" href="#一些示例" aria-hidden="true">#</a></h1><h2 id="添加或删除-www-子域名" tabindex="-1">添加或删除 <code>www</code> 子域名 <a class="header-anchor" href="#添加或删除-www-子域名" aria-hidden="true">#</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-gaFIw" id="tab-0z4t5iz" checked="checked"><label for="tab-0z4t5iz">添加 www 子域名</label><input type="radio" name="group-gaFIw" id="tab-bSK71VY"><label for="tab-bSK71VY">删除 www 子域名</label></div><div class="blocks"><div class="language-nginx active"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">443 ssl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">domain.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme://www.domain.com</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 不推荐使用 rewrite</span></span>
<span class="line"><span style="color:#89DDFF;">rewrite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^(.*)$</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme://www.domain.com</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1 </span><span style="color:#F78C6C;">permanent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">443 ssl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">www.domain.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme://domain.com</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="强制所有请求使用-ssl-tls" tabindex="-1">强制所有请求使用 SSL/TLS <a class="header-anchor" href="#强制所有请求使用-ssl-tls" aria-hidden="true">#</a></h2><p>此 server 块强制所有访问者使用安全 (SSL/TLS) 连接到站点。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">www.domain.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> https://www.domain.com</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 不推荐使用 rewrite 重写规则</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme </span><span style="color:#89DDFF;">!= </span><span style="color:#C3E88D;">&quot;https&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">rewrite</span><span style="color:#F07178;"> </span><span style="color:#C3E88D;">^ https://www.mydomain.com$</span><span style="color:#F07178;">uri </span><span style="color:#F78C6C;">permanent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="禁止对不支持的文件扩展名的请求" tabindex="-1">禁止对不支持的文件扩展名的请求 <a class="header-anchor" href="#禁止对不支持的文件扩展名的请求" aria-hidden="true">#</a></h2><p>由于各种原因，站点可能会收到以与未运行的应用程序服务器相对应的文件扩展名结尾的请求 URL，而服务器处理的文件类型的请求无法得到服务，需要被拒绝。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.(aspx|php|jsp|cgi)$ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">410</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>它相对于 404 响应代码的优势在于它明确指示资源永久不可用，因此客户端不会再次发送请求。</p><h2 id="禁止访问站点某些前缀" tabindex="-1">禁止访问站点某些前缀 <a class="header-anchor" href="#禁止访问站点某些前缀" aria-hidden="true">#</a></h2><p>在站点需要迁移的时候，站点对应的后台不想让用户对数据进行编辑，可以通过配置 Nginx 禁止访问站点的某些域名前缀。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/admin </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">403</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>这样配置的话，再访问前缀为 <code>/admin</code> 就会返回 <strong>403 Forbidden</strong>；</p><h2 id="配置自定义重新路由" tabindex="-1">配置自定义重新路由 <a class="header-anchor" href="#配置自定义重新路由" aria-hidden="true">#</a></h2><p>现在通过重新配置自定义的路由，URL <code>http://mysite.com/list/123</code> 用户友好的被重写为由<code>list.html</code> 控制器处理的 URL <code>http://mysite.com/list.html?arg=123</code></p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">rewrite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^/list/(.*)$</span><span style="color:#A6ACCD;"> /list.html?arg=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;"> last;</span></span>
<span class="line"></span></code></pre></div><h2 id="修复失败图片路径" tabindex="-1">修复失败图片路径 <a class="header-anchor" href="#修复失败图片路径" aria-hidden="true">#</a></h2><p>在迁移项目时会出现一些图片不在原来的图片位置。比如访问URL <code>http://mysite.com/uploads/images/example.png</code> 图片<code>example.png</code> 实际所在路径是 <code>/uploads/example.png</code>，此时可以通过 <code>rewrite</code> 对路径进行重写：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">rewrite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^/uploads/images/(.*)$</span><span style="color:#A6ACCD;"> /uploads/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;"> last;</span></span>
<span class="line"></span></code></pre></div><p>这样配置后，在访问 <code>http://mysite.com/uploads/images/exmaple.png</code> 也能访问 <code>/uploads/example.png</code> 文件。</p><h2 id="图片缺失时使用默认图片" tabindex="-1">图片缺失时使用默认图片 <a class="header-anchor" href="#图片缺失时使用默认图片" aria-hidden="true">#</a></h2><p>当一些原因导致图片无法访问，可以临时使用一张默认图片作为展示。</p><p>比如文章封面或文章内容图，<code>https://mysite.com/storage/uploads/images/xx.png</code> 或者 <code>https://mysite.com/storage/posts/cover/images/xx.png</code> 无法访问，当出现上面的图片地址无法访问时展示一张默认的图片。</p><p>可以使用 nginx 提供的 <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files" target="_blank" rel="noreferrer"><code>try_files</code> 指令</a></p><p><strong>注意：默认图片必须可以访问。</strong></p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 假定默认的图片存放在项目 /images/default.jpg</span></span>
<span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*~ storage\\/(uploads|posts\\/cover)\\/images </span><span style="color:#A6ACCD;">{ </span><span style="color:#676E95;font-style:italic;"># 正则匹配url前缀</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">/var/www/codes/{PROJECT_NAME}</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 这里编写项目根目录</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;"> try_files $</span><span style="color:#A6ACCD;">uri /images/default.jpg</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 这里提供默认文件</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/images/default.jpg </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> expires </span><span style="color:#A6ACCD;">30s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div>`,27),o=[p];function t(c,r,i,C,y,D){return n(),a("div",null,o)}const F=s(e,[["render",t]]);export{A as __pageData,F as default};
