import{_ as t,c as d,o as e,a2 as o}from"./chunks/framework.CrCg5V4F.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"snippets/var-index.md","filePath":"snippets/var-index.md","lastUpdated":1680507671000}'),r={name:"snippets/var-index.md"},c=o('<p>Nginx 支持的 http 变量实现在 <a href="https://github.com/nginx/nginx/blob/master/src/http/ngx_http_variables.c#L164" target="_blank" rel="noreferrer">ngx_http_variables.c</a> 的 <code>ngx_http_core_variables</code> 存储实现。</p><table><thead><tr><th>变量名</th><th>简单说明</th></tr></thead><tbody><tr><td><code>$arg_PARAMETER</code></td><td>这个变量包含GET请求中，如果有变量 PARAMETER 时的值</td></tr><tr><td><code>$args</code></td><td>这个变量等于请求行中的参数，同 <code>$query_string</code></td></tr><tr><td><code>$binary_remote_addr</code></td><td>二进制的客户地址</td></tr><tr><td><code>$body_bytes_sent</code></td><td>响应时送出的body字节数数量。即使连接中断，这个数据也是精确的</td></tr><tr><td><code>$content_length</code></td><td>请求头中的 <code>Content-length</code> 字段。</td></tr><tr><td><code>$content_type</code></td><td>请求头中的 <code>Content-Type</code> 字段。</td></tr><tr><td><code>$cookie_COOKIE</code></td><td>cookie COOKIE变量的值</td></tr><tr><td><code>$document_root</code></td><td>当前请求在 root 指令中指定的值。</td></tr><tr><td><code>$host</code></td><td>请求主机头字段，否则为服务器名称。</td></tr><tr><td><code>$http_user_agent</code></td><td>客户端 agent 信息</td></tr><tr><td><code>$http_cookie</code></td><td>客户端 cookie 信息</td></tr><tr><td><code>$limit_rate</code></td><td>这个变量可以限制连接速率。</td></tr><tr><td><code>$request_body_file</code></td><td>客户端请求主体信息的临时文件名</td></tr><tr><td><code>$request_method</code></td><td>客户端请求的动作，通常为 GET 或 POST 。</td></tr><tr><td><code>$remote_addr</code></td><td>客户端的 IP 地址，如果上层使用了负载均衡可以尝试获取 <code>$http_x_forwarded_for</code> 的值</td></tr><tr><td><code>$remote_port</code></td><td>客户端的端口。</td></tr><tr><td><code>$remote_user</code></td><td>已经经过Auth Basic Module验证的用户名。</td></tr><tr><td><code>$request_completion</code></td><td>如果请求结束，设置为OK。当请求未结束或如果该请求不是请求链串的最后一个时为空</td></tr><tr><td><code>$request_filename</code></td><td>当前请求的文件路径，由 root 或 alias 指令与URI请求生成。</td></tr><tr><td><code>$scheme</code></td><td>HTTP方法（如http，https）。</td></tr><tr><td><code>$server_protocol</code></td><td>请求使用的协议，通常是HTTP/1.0或HTTP/1.1。</td></tr><tr><td><code>$server_addr</code></td><td>服务器地址，在完成一次系统调用后可以确定这个值。</td></tr><tr><td><code>$server_name</code></td><td>服务器名称。</td></tr><tr><td><code>$server_port</code></td><td>请求到达服务器的端口号。</td></tr><tr><td><code>$request_uri</code></td><td>包含请求参数的原始URI，不包含主机名，如：<code>/foo/bar.php?arg=baz</code>。</td></tr><tr><td><code>$uri</code></td><td>不带请求参数的当前URI，<code>$uri</code>不包含主机名，如 <code>/foo/bar.html</code>。</td></tr><tr><td><code>$document_uri</code></td><td>与 <code>$uri</code> 相同。</td></tr></tbody></table>',2),_=[c];function a(n,s,i,p,$,h){return e(),d("div",null,_)}const u=t(r,[["render",a]]);export{m as __pageData,u as default};
