import{_ as s,c as n,o as a,a as l}from"./app.24355d18.js";const d=JSON.parse('{"title":"一些示例","description":"","frontmatter":{},"headers":[{"level":2,"title":"添加或删除 www 子域名","slug":"添加或删除-www-子域名","link":"#添加或删除-www-子域名","children":[]},{"level":2,"title":"强制所有请求使用 SSL/TLS","slug":"强制所有请求使用-ssl-tls","link":"#强制所有请求使用-ssl-tls","children":[]},{"level":2,"title":"禁止对不支持的文件扩展名的请求","slug":"禁止对不支持的文件扩展名的请求","link":"#禁止对不支持的文件扩展名的请求","children":[]},{"level":2,"title":"禁止访问站点某些前缀","slug":"禁止访问站点某些前缀","link":"#禁止访问站点某些前缀","children":[]},{"level":2,"title":"配置自定义重新路由","slug":"配置自定义重新路由","link":"#配置自定义重新路由","children":[]}],"relativePath":"guide/examples.md","lastUpdated":1678672572000}'),p={name:"guide/examples.md"},e=l(`<h1 id="一些示例" tabindex="-1">一些示例 <a class="header-anchor" href="#一些示例" aria-hidden="true">#</a></h1><h2 id="添加或删除-www-子域名" tabindex="-1">添加或删除 <code>www</code> 子域名 <a class="header-anchor" href="#添加或删除-www-子域名" aria-hidden="true">#</a></h2><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># add &#39;www&#39;</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">443 ssl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">domain.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme://www.domain.com</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 不推荐使用 rewrite</span></span>
<span class="line"><span style="color:#89DDFF;">rewrite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^(.*)$</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme://www.domain.com</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1 </span><span style="color:#F78C6C;">permanent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># remove &#39;www&#39;</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">443 ssl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">www.domain.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme://domain.com</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="强制所有请求使用-ssl-tls" tabindex="-1">强制所有请求使用 SSL/TLS <a class="header-anchor" href="#强制所有请求使用-ssl-tls" aria-hidden="true">#</a></h2><p>此server块强制所有访问者使用安全 (SSL/TLS) 连接到站点。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">www.domain.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> https://www.domain.com</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 不推荐使用 rewrite 重写规则</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme </span><span style="color:#89DDFF;">!= </span><span style="color:#C3E88D;">&quot;https&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">rewrite</span><span style="color:#F07178;"> </span><span style="color:#C3E88D;">^ https://www.mydomain.com$</span><span style="color:#F07178;">uri </span><span style="color:#F78C6C;">permanent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="禁止对不支持的文件扩展名的请求" tabindex="-1">禁止对不支持的文件扩展名的请求 <a class="header-anchor" href="#禁止对不支持的文件扩展名的请求" aria-hidden="true">#</a></h2><p>由于各种原因，站点可能会收到以与未运行的应用程序服务器相对应的文件扩展名结尾的请求 URL，而服务器处理的文件类型的请求无法得到服务，需要被拒绝。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.(aspx|php|jsp|cgi)$ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">410</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>它相对于 404 响应代码的优势在于它明确指示资源永久不可用，因此客户端不会再次发送请求。</p><h2 id="禁止访问站点某些前缀" tabindex="-1">禁止访问站点某些前缀 <a class="header-anchor" href="#禁止访问站点某些前缀" aria-hidden="true">#</a></h2><p>在站点需要迁移的时候，站点对应的后台不想让用户对数据进行编辑，可以通过配置 Nginx 禁止访问站点的某些域名前缀。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/admin </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">403</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>这样配置的话，再访问前缀为 <code>/admin</code> 就会返回 <strong>403 Forbidden</strong>；</p><h2 id="配置自定义重新路由" tabindex="-1">配置自定义重新路由 <a class="header-anchor" href="#配置自定义重新路由" aria-hidden="true">#</a></h2><p>现在通过重新配置自定义的路由，URL <code>http://mysite.com/list/123</code> 用户友好的被重写为由<code>list.html</code> 控制器处理的 URL <code>http://mysite.com/list.html?arg=123</code></p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">rewrite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^/list/(.*)$</span><span style="color:#A6ACCD;"> /list.html?arg=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;"> last;</span></span>
<span class="line"></span></code></pre></div>`,17),o=[e];function t(c,r,i,C,y,D){return a(),n("div",null,o)}const F=s(p,[["render",t]]);export{d as __pageData,F as default};
